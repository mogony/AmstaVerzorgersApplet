package views;

import connectivity.QueryManager;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;
import models.Patient;

/**
 *
 * @author Jelle Mogony, AMS04
 */
public class PatientOverview extends javax.swing.JFrame {

    private QueryManager qm = new QueryManager();
    private final DefaultTableModel patientTableModel;
    
    /**
     * Creates new form PatientOverview
     */
    public PatientOverview() {
        System.out.println("Setting up patients overview...");
        initComponents();
        this.setTitle(ldgraph.Session.storedUserName + " - Bewoners overzicht");
        patientTableModel = (DefaultTableModel) this.patientTable.getModel();
        LinkedList<Patient> patients = qm.getPatientList();
        for(Patient patient : patients) {
            patientTableModel.addRow(new Object[]{
                patient.getPatientId(),
                patient.getName(),
                patient.getRoom(),
                patient.getDob()});
        }
        System.out.println("Done setting up patients overview.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jlError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Bewoner", "Kamer", "Geboorte Datum"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientTable);
        if (patientTable.getColumnModel().getColumnCount() > 0) {
            patientTable.getColumnModel().getColumn(0).setMaxWidth(20);
            patientTable.getColumnModel().getColumn(2).setMaxWidth(50);
            patientTable.getColumnModel().getColumn(3).setMinWidth(100);
        }

        jButton1.setText("Laat resultaten zien");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jlError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jlError))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = patientTable.getSelectedRow();
        if(selectedRow >= 0) 
        {
            ldgraph.Session.storedPatientId = 
                    (int) patientTable.getValueAt(selectedRow, 0);
            this.setVisible(false);
            ldgraph.LDGraph.showPatientGraph();
        } else 
        {
            System.out.println("No row selected!");
            jlError.setText("U moet eerst een regel selecteren!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlError;
    private javax.swing.JTable patientTable;
    // End of variables declaration//GEN-END:variables
}
